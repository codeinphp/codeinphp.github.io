<?xml version="1.0" encoding="ISO-8859-1"?>
<rss version="2.0">
<channel>
<title>Code In PHP</title>
<link>https://codeinphp.github.io</link>
<description>PHP and more...</description>
<language>en-us</language>
<item>
<title>My Local Development Workflow with WAMP/XAMPP, GIT and Google Drive</title>
<description><![CDATA[<p>I like to share my local development workflow which has turned out to be <strong>extremely useful</strong> in that all my projects’ files are <strong>version-ed and on the cloud</strong>. I use <strong>git</strong> to keep my files versioned and <strong>Google Drive</strong> so that I can access my projects anywhere. In this post, I will share really cool stuff that you definitely should consider implementing for your own projects.</p>
<p>If you don’t know about git and its benefits, there are numerous compelling reasons why it is useful, you might want to check out:</p>
<ul>
<li><a href="http://learn.github.com/p/intro.html">Introduction To Git</a></li>
<li><a href="http://www.gitology.com/chapter/benefits-of-using-git">The Benefits of Using Git</a></li>
<li><a href="http://coding.smashingmagazine.com/2011/07/26/modern-version-control-with-git-series/">Modern Version Control With Git</a></li>
<li><a href="http://whygitisbetterthanx.com/#svn">whygitisbetterthanx.com</a></li>
</ul>
<p>The benefits of keeping all my files and projects on the cloud like Google Drive should be obvious but if you are still not sure, check out:</p>
<ul>
<li><a href="http://www.salesforce.com/uk/socialsuccess/cloud-computing/why-move-to-cloud-10-benefits-cloud-computing.jsp">Why Move to the Cloud? 10 Benefits of Cloud Computing</a></li>
<li><a href="http://www.go-oodles.com/index.php/2012/08/the-six-key-business-benefits-of-google-drive/">The Six Key Business Benefits of Google Drive</a></li>
</ul>
<p>Although there are many other cloud storage services such as <a href="https://skydrive.live.com/">Microsoft SkyDrive</a>, <a href="https://www.dropbox.com/">Dropbox</a>, <a href="https://www.box.com/">Box</a>, <a href="http://www.bitcasa.com/">Bitcasa</a>, etc but I chose Google Drive since it gives 10GB of free space which should be enough for my development needs. If that’s not enough for you, you can create another Gmail account and get another 10GB free. You might want to read their usage policies too if you want.  You may also consider using Bitcasa which gives you unlimited space but since it is new, I can’t personally trust it as yet.</p>
<h2>Installing Google Drive</h2>
<p><strong>Step 1:</strong> <a href="https://mail.google.com/">Create a new Gmail account</a> to be used with Google Drive client software. Although you can use your existing account but it is good idea to create a new one used for your projects’ backup only.</p>
<p><strong>Step 2:</strong> Download Google Drive from <a href="https://tools.google.com/dlpage/drive">here</a> or <a href="http://filehippo.com/download_google_drive/">here</a>. During the installation, you would be asked to specify the folder path which will be synchronized with Google Drive. Make sure that you specify a folder present on any drive other than your OS drive so that even if your system crashes or corrupts, your projects remain intact. For example, I have that folder on path D:/Google Drive/</p>
<p><strong>Step 3:</strong>  Once installed, run Google Drive software and specify the credentials of your newly created Gmail account.</p>
<h2>Using Google Drive with WAMP/XAMPP</h2>
<p>Now that we’ve setup google drive, it is time to setup document root to google drive folder and create virtual host. This would allow you to run your local projects through WAMP/XAMPP from google drive folder. The reason why we do this is that since google drive folder will be sync by google drive software, any project we put in that folder will automatically be uploaded in your google drive account.</p>
<blockquote>
<p><strong>Note:</strong> I am using XAMPP but if you are using WAMP, some settings or file paths might be different, you should consider reading its
documentation.</p>
</blockquote>
<p><strong>Step 1:</strong> Inside your google drive folder, create a new folder named <strong>webroot</strong> making whole path <strong>X:\Google Drive\webroot</strong> where <strong>X</strong> represents your drive letter.</p>
<p><strong>Step 2:</strong> Assuming you have specified google drive folder to be  <strong>D:/Google Drive/</strong>, open <strong>httpd.conf</strong> (normally located at <strong>apache\conf</strong> folder) file in notepad or other text editor and find the line <strong>Include “conf/extra/httpd-vhosts.conf”</strong>. If there is a hash (#) before that line, remove it. Now find the line with <strong><Directory /></strong> and you should see something similar to:</p>
<pre><code>&lt;Directory /&gt;
   AllowOverride none
   Require all denied
&lt;/Directory&gt;</code></pre>
<p>Change <strong>Require all denied</strong>  to <strong>Require all granted</strong></p>
<p>Or if you see something like:</p>
<pre><code>&lt;Directory /&gt;
    Options FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
&lt;/Directory&gt;</code></pre>
<p>Change it to:</p>
<pre><code>&lt;Directory /&gt;
    ........
    Allow from all
&lt;/Directory&gt;</code></pre>
<p>Now come to bottom of the file and add:</p>
<pre><code>&lt;Directory "D:\Google Drive\webroot"&gt;
  Options Indexes MultiViews
  Order Allow,Deny
  Allow from all
&lt;/Directory&gt;</code></pre>
<p>Save the file and close it.</p>
<p><strong>Step 3:</strong> Open <strong>httpd-vhosts.conf</strong> (normally located at <strong>apache\conf\extra</strong> folder) and add these lines at the end of it:</p>
<pre><code>&lt;VirtualHost 127.0.0.1:80&gt;
    DocumentRoot "D:/Google Drive/webroot"
    ServerName gdroot.loc
    ServerAlias gdroot.loc
    ErrorLog "D:/Google Drive/webroot/logs/error.log"
    CustomLog "D:/Google Drive/webroot/logs/access.log" combined
&lt;/VirtualHost&gt;</code></pre>
<p>Save the file and close it. Notice that we have specified <strong>gdroot.loc</strong> as address which actually means google drive root (<strong>.loc</strong> signals that it is local folder) which actually maps to your google drive webroot folder eg <strong>D:/Google Drive/webroot</strong>. Notice that you could name it anything you want like <strong>mycoolwebsite.com, yourname.com</strong>, etc but of course that is local folder running from your own computer.</p>
<p><strong>Step 4:</strong> Open <strong>hosts</strong> file in notepad or other text editor located at <strong>X:\Windows\System32\drivers\etc</strong> where <strong>X</strong> stands for drive letter where your OS is installed. At the end of that file add this line assuming you specified URL in above step as <strong>gdroot.loc</strong>:</p>
<pre><code>127.0.0.1       gdroot.loc</code></pre>
<p>Or if you also use port to access your LAMP/XAMPP URLs, specify that as well:</p>
<pre><code>127.0.0.1:PORT_NUMBER_HERE       gdroot.loc</code></pre>
<blockquote>
<p><strong>Note:</strong> If you can’t edit hosts file, you need to have file owner permission, search on Google how to do that.</p>
</blockquote>
<p>Restart apache and access the new url by typing <strong>gdroot.loc</strong> in your browser. You should see screen similar to when you go to <a href="http://localhost">http://localhost</a>.</p>
<p>Congratulations ! you have a nice workflow now. You can now put all your existing our new projects inside your new document root which was assumed to be located at <strong>D:\Google Drive\webroot</strong> and now all your projects are sync with google drive and automatically uploaded to your google account which you can access anywhere. For example, you can now access your projects at office or any other computer by installing google drive client software  there and telling it sync/download your webroot folder. Your projects are now always there and backed up on the cloud :)</p>
<p>Let’s take cool stuff one step further by using <strong>git</strong> so that our projects file are also <strong>version-ed</strong>. If you don’t know much about git and its benefits consider reading links posted above or below in the <strong>Git Resources</strong> section.</p>
<h2>Using Git with a Central Repository</h2>
<p>Creating and using central repository is especially useful in a team. If you just want to keep your projects version-ed and are the only developer working on a project, the normal flow is (unless you track your project to remote host such as <a href="http://github.com/">github</a>):</p>
<ul>
<li>modify files</li>
<li>commit your changes</li>
<li>repeat</li>
</ul>
<p>So essentially you can skip this section if you just want to version your project files and are only developer working on a project.</p>
<p><strong>Step 1:</strong> Download msysgit from <a href="http://code.google.com/p/msysgit/downloads/list">here</a>, choose first link from there. Install it with default settings.</p>
<p><strong>Step 2:</strong> Go to your google drive folder (<strong>D:\Google Drive\</strong>) and create a new folder there named <strong>central.git</strong></p>
<p><strong>Step 3:</strong> Right click on newly created folder and choose <strong>Git Bash Here</strong> and type: </p>
<pre><code>git init –bare</code></pre>
<p><strong>Step 4:</strong> Create a test project folder named <strong>myproject</strong> inside your normal WAMP/XAMPP webroot/htdocs folder or google drive webroot folder mentioned above (Although you can git-manage any folder anywhere on the drive but naturally we want to git-manage projects that we run from webroot/htdocs folder).</p>
<p><strong>Step 5:</strong> Right click on newly created folder, choose <strong>Git Bash Here</strong> and issue these commands one by one:</p>
<pre><code>git init
git remote add central /e/Google\ Drive/central.git/
git push --all central
git push --set-upstream-to central master</code></pre>
<p>Great! now we’ve setup central repository for all our git-managed projects and we can commit, push, fetch all changes from that central repository. For any new repository, you can now issue commands like:</p>
<pre><code>git clone /e/Google\ Drive/central.git/
git fetch /e/Google\ Drive/central.git/
git push central
and so on</code></pre>
<p>That's it.</p>
<h2>Git Resources</h2>
<ul>
<li><a href="http://learn.github.com/p/intro.html">Introduction To Git</a></li>
<li><a href="http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide">Git for beginners: The definitive practical guide</a></li>
<li><a href="http://net.tutsplus.com/tutorials/other/easy-version-control-with-git/">Easy Version Control with Git</a></li>
<li><a href="http://git-scm.com/book">Pro Git Book</a></li>
<li><a href="http://gitref.org/">Git Reference</a></li>
<li><a href="http://net.tutsplus.com/?s=git">and more</a></li>
</ul>]]></description>
<link>https://codeinphp.github.io/post/my-local-development-workflow-with-wamp-xampp-git-and-google-drive.html</link>
<pubDate>Sun, 12 Apr 2015 13:24:00 +0200</pubDate>
</item>
<item>
<title>GoodTodo PHP and SQlite App</title>
<description><![CDATA[<p>I really like to keep track of tasks and projects (personal or otherwise) I work on. I used to keep my todos list in notepad or by using some other sticky notes application but I wanted dead simple todos app with beautiful looks and simple to use without irrelevant options or goodies. So here I introduce GoodTodo; a todo app made via PHP and SQlite. I chose SQlite because I wanted to make sure that app is portable and of course since it’s small todo app, choosing SQlite for it makes perfect sense. I have used <a href="http://flightphp.com/">flightPHP</a> framework and <a href="http://j4mie.github.io/idiormandparis/">idiorm ORM</a> for it.</p>
<p>Here are its screenshots:</p>
<p><img src="https://codeinphp.github.io/images/1428836471552a507761961.png" alt="enter image description here" /></p>
<p><img src="https://codeinphp.github.io/images/1428836475552a507b38615.png" alt="enter image description here" /></p>
<p><img src="https://codeinphp.github.io/images/1428836467552a50733de24.png" alt="enter image description here" /></p>
<p><strong>How to use:</strong></p>
<p>Make sure you have wamp/xampp or other stack installed. Download the app and put in www/htdocs folder and browse to that folder via browser something like <a href="http://localhost/todo">http://localhost/todo</a>. Please make sure you have sqlite extension turned on from php.ini if it isn’t already.</p>
<p>So go ahead and <a href="https://dl.dropboxusercontent.com/u/11600057/todo.zip">download GoodTodo</a> to keep track of your todos.</p>]]></description>
<link>https://codeinphp.github.io/post/goodtodo-php-and-sqlite-app.html</link>
<pubDate>Sun, 12 Apr 2015 13:03:00 +0200</pubDate>
</item>
<item>
<title>BloggerCMS  - An Static Blog Generator CMS</title>
<description><![CDATA[<p>In the <a href="https://codeinphp.github.io/post/welcome.html">last post</a>, I had mentioned about BloggerCMS which is used to build this very blog. BloggerCMS is dead simple CMS that can be used to create fully functional static blogs. Although there are <a href="https://github.com/pinceladasdaweb/Static-Site-Generators#php">quite some static site generators</a> out there but I created BloggerCMS because I was missing these features in any of those static site generators:</p>
<ul>
<li>Web interface that allows me to create blog posts, add pages and more instead of writing blog posts manually in bunch of different text files</li>
<li>Markdown editor with live preview feature so that I don't have to type Markdown syntax myself</li>
<li>I needed a true blog generator instead of generic/advanced site generator</li>
</ul>
<p>Those three things are the driving force why I created BloggerCMS. Here is complete list of features of BloggerCMS as of now:</p>
<ul>
<li><strong>Graphical User Interface</strong> - manage your site via a browser</li>
<li><strong>File-based</strong> - no database required</li>
<li><strong>Truly Static</strong> - no server-side languages needed</li>
<li><strong>Portability</strong> - copy, move, backup or version control your site easily</li>
<li><strong>Integrated Markdown Editor</strong> - no need to know Markdown</li>
<li><strong>Built-in Images Manager</strong></li>
<li><strong>Disqus Commenting System</strong></li>
<li><strong>Search Posts Feature</strong></li>
<li><strong>Pagination</strong></li>
<li><strong>Responsive Layout</strong> - get started easily with the included responsive layout</li>
<li><strong>RSS Support</strong></li>
<li><strong>Sitemap Support</strong></li>
<li><strong>Google Analytics</strong></li>
<li><strong>Code Highlight Support</strong></li>
<li><strong>Tags Cloud Support</strong></li>
<li><strong>Social Follow Section</strong></li>
<li><strong>Categories Section</strong></li>
<li><strong>Archives Section</strong></li>
</ul>
<p>To know more about BloggerCMS, head over to <a href="https://bloggercms.github.io">it's blog</a> or see <a href="https://bloggercms.github.io/post/introducing-bloggercms.html">introductory post</a>.</p>]]></description>
<link>https://codeinphp.github.io/post/bloggercms-an-static-blog-generator-cms.html</link>
<pubDate>Mon, 06 Apr 2015 21:41:00 +0200</pubDate>
</item>
<item>
<title>Welcome !</title>
<description><![CDATA[<p><strong>Hello, World !</strong></p>
<p>This is my first post on this blog hosted at awesome <a href="https://pages.github.com/">github pages</a>. Previously I used to blog on wordpress <a href="http://sarfraznawaz.wordpress.com">here</a> but I switched to github pages because I really wanted to have static blog with free hosting and ability to write up quick posts using <a href="http://en.wikipedia.org/wiki/Markdown">Markdown</a> syntax. In the <a href="https://codeinphp.github.io/post/bloggercms-an-static-blog-generator-cms.html">next post</a>, I will write about <strong><a href="https://bloggercms.github.io">BloggerCMS</a></strong>, a CMS I have made that helps create static blogs. This blog has also been generated via BloggerCMS :)</p>
<p>On this blog, I intend to write my ideas mainly about PHP as well as other related web development technologies. </p>
<p><em>Stay tuned :)</em></p>]]></description>
<link>https://codeinphp.github.io/post/welcome.html</link>
<pubDate>Sun, 05 Apr 2015 15:46:00 +0200</pubDate>
</item>
</channel>
</rss>
